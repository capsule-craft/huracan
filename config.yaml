# Environment is used to prefix logs, database collections, and Pulsar topics.
env: dev

# Sui network.
net: testnet

# Location of RocksDB file used in backfill mode.
rocksdbfile: ./backfill.tmp.db

# Number of checkpoints we need to be behind to change into backfill mode.
backfillthreshold: 240

# Determine if we want to stop indexing the latest checkpoints while backfilling.
pausepollonbackfill: false

# Frequency at which we check for a new checkpoint on the Sui blockchain. Each interval will invoke an RPC call.
pollintervalms: 100

#
throughput:
  queuebuffers:
    # 1024 * 1024
    checkpointout: 1048576
    cpcompletions: 1024
    mongoinfactor: 10
    last: 4096
  workers:
    checkpoint: 16 # Determine the number of Tokio threads issuing RPC calls for checkpoint data.
    object: 64 # Determine the number of Tokio threads issuing RPC calls for full object data. Keep in mind that we use sui_multiGetObjects(), so there are many objects fetched on each invocation.
    mongo: 32 # Determine the number of Tokio threads issuing CRUD operations to MongoDB. Keep in mind that we batch these queries based on config below.
  objectqueries:
    batchsize: 50 # Determine the number of Sui objects to fetch in a single sui_multiGetObjects() request.
    batchwaittimeoutms: 1000 # Determine interval for issuing sui_multiGetObjects() request.
  mongo:
    batchsize: 4096 # Determine the number of CRUD operations to issue to Mongo at each interval.
    batchwaittimeoutms: 1000 # Determine the time between batched MongoDB operations.
    retries: 32 # Determine the number of retries for MongoDB operations before dropping queries.
    zstdlevel: 5 # MongoDB compression setting for on-wire data. See: https://www.mongodb.com/docs/manual/reference/glossary/#std-term-zlib
  checkpointretries: 32
  checkpointretrytimeoutms: 500
  tracklatency: false

pipeline:
  queuebuffers:
    checkpointout: 2048 # The bounded capacity of the async channel which passes messages between checkpoint workers and object workers.
    cpcompletions: 2048 # The bounded capacity of a synchronous Tokio channel which handles backpressure between checkpoint workers and object workers. This is the maximum number of pending objects requiring RPC lookup after being scanned from a checkoint scan.
    mongoinfactor: 1
    last: 256
  workers:
    checkpoint: 1
    object: 4
    mongo: 4
  objectqueries:
    batchsize: 50
    batchwaittimeoutms: 10
  mongo:
    batchsize: 1024
    batchwaittimeoutms: 10
    retries: 32
    zstdlevel: 1
  checkpointretries: 128
  checkpointretrytimeoutms: 250
  tracklatency: true

mongo:
  # you need to set this via ENV as it's the only way to set your credentials if we don't want to keep them in this file
  #uri: mongodb+srv://<user>:<pass>@sui-testnet.7b6tqsn.mongodb.net
  db: sui
  collectionbase: objects

pulsar:
  url: pulsar+ssl://nonprod-9ce3148a-cd24-48d0-8c29-8e6561c3e44a.aws-euw1-snci-duck-prod-snc.aws.snio.cloud:6651
  issuer: https://auth.streamnative.cloud/
  # o-mvqin-testnet.json, base64-encoded
  # you probably want to override this via ENV
  # TODO discuss whether we should not include the testnet credentials here
  credentials: file:///opt/pulsar-credentials.json
  audience: urn:sn:pulsar:o-mvqin:nonprod
  topicbase: persistent://public/default/

sui:
  testnet:
    - url: https://rpc-testnet.suiscan.xyz:443
      name: suiscan
      objectsquerylimit: 50
      # slow!
  #    - url: https://sui-testnet.nodeinfra.com:443
  #      name: nodeinfra
  #      objectsquerylimit: 50
  mainnet:
    - url: https://rpc-mainnet.suiscan.xyz:443
      name: suiscan
      objectsquerylimit: 50
  localnet:
    - url: http://127.0.0.1:9000
      name: sui-test-validator
      objectsquerylimit: 50

log:
  # fancy some colors? - disable if redirect to file is intended
  ansi: true
  # base-line log level
  level: info
  # my_crate=info,my_crate::my_mod=debug,[my_span]=trace
  # see https://tracing.rs/tracing_subscriber/filter/struct.envfilter
  #filter:
