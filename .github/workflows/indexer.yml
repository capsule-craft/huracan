name: (prod) (indexer) build & deploy
on:
  push:
    branches:
      - main
    paths:
      - '${{ env.CRATE_DIR }}/**'
      - 'macros/**'
      - 'config.yaml'
      - '!*.txt'
env:
  CRATE_DIR: main
  BIN: sui-indexer
  RUSTC_WRAPPER: 'true'
  SCCACHE_GHA_ENABLED: sccache
  REGISTRY: ghcr.io
  IMAGE: ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.BIN }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: install dependencies
        run: sudo apt-get install -y -q clang protobuf-compiler
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
      - uses: mozilla-actions/sccache-action@v0.0.3
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --bin $BIN
      - run: mkdir binaries && mv target/release/$BIN binaries/
      - uses: docker/login-action
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action
        id: meta
        with:
          images: ${{ env.IMAGE }}
      - uses: docker/build-push-action
        with:
          context: .
          build-args: BIN=${{ env.BIN }}
          build-contexts: binaries=binaries
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy_testnet:
    name: deploy testnet
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: testnet
        run: flyctl deploy --image ${{ env.IMAGE }} ${{ env.CRATE_DIR }} -c fly-prod-testnet.toml
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy_mainnet:
    name: deploy mainnet
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: mainnet
        run: flyctl deploy --image ${{ env.IMAGE }} ${{ env.CRATE_DIR }} -c fly-prod-mainnet.toml
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
